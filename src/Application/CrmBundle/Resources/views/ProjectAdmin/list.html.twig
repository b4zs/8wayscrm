{% extends 'SonataAdminBundle:CRUD:base_list.html.twig' %}

{% block tab_menu_navbar_header %}
    {% if _navbar_title is not empty %}
        <div class="navbar-header col-md-10">
            {{ _navbar_title|raw }}
        </div>
    {% endif %}
{% endblock %}

{% block list_table %}

    <style>
        .tools-frame {
            float:right;
            margin: 0 15px;
            background: #f4f4f4;
            padding: 5px;
        }

        .tools-frame a {
            margin: 0 5px;
        }

    </style>

    {#  Source and documentation
        -----------------------------------------------
        https://jonmiles.github.io/bootstrap-treeview/
        https://github.com/jonmiles/bootstrap-treeview
     #}

    <script>
        var serializedData = {{ serializedData|raw }};
        var data = [];
        var lastResultNumber = {{ lastResultNumber }};
        var count = {{ countResults }};
        var index = {};
        var index_ref = {};

        $(document).on('click', '#load-more-project', function () {
            var url = $(this).data('url');

            $.ajax({
                url: url,
                data: {
                    numberOfFirstRow: lastResultNumber
                },
                method: 'POST'
            }).done(function (resp) {
                lastResultNumber += 10;

                var respData = resp.serializedData;

                $.each(respData, function (i, node) {
                    var item = createItem(node, i);
                    recursiveChildProjects(node, item);
                    data.push(item);
                });

                initializeTree();
            });
        });

        function buildTreeData(serializedData) {
            $.each(serializedData, function (i, node) {
                var item = createItem(node, i);

                recursiveChildProjects(node, item);

                data.push(item);
            });
        }

        function openAddNewProject(el) {
            console.log('test', el);
            var parent = $(el).closest('.list-group-item');
            var id = parent.data('nodeid');
            var row = $('#tree').treeview('getNode', id);

            var newProjectPath = row.newChildPath;

            redirect(newProjectPath);
        }

        function openDetailsLink(el) {
            var parent = $(el).closest('.list-group-item');
            var id = parent.data('nodeid');
            var row = $('#tree').treeview('getNode', id);

            var href = row.href;

            redirect(href);
        }

        function openRemoveLink(el) {
            var parent = $(el).closest('.list-group-item');
            var id = parent.data('nodeid');
            var row = $('#tree').treeview('getNode', id);

            var newProjectPath = row.deletePath;

            redirect(newProjectPath);
        }

        function redirect(path) {
            if(path) {
                window.location.href = path;
            }
        }

        function initializeTree() {
            var selector = $('#tree');

            selector.treeview({
                data: getTree(),
                enableLinks: true,
                showTags: true,
                template: {
                    icon: '<span class="icon"></span>',
                    badge: '<span class="badge"></span>',
                    link: '<a href="#" style="color:inherit;"></a>',
                    tools: '<span class="tools-frame">' +
                                '<span class="project-loader" style="display: none">loading.. <i class="fa fa-spinner"></i></span>' +
                                '<a href="#" class="details-link" onclick="openDetailsLink(this)"><span class="glyphicon glyphicon-cog"></span></a>' +
                                '<a href="#" class="trash-link" onclick="openRemoveLink(this)"><span class="glyphicon glyphicon-trash"></span></a>' +
                                '<a href="#" class="plus-link" onclick="openAddNewProject(this)"><span class="glyphicon glyphicon-plus"></span></a>' +
                            '</span>'
                }
            });

            selector.on('nodeExpanded', function (event, nodeData) {
                if (nodeData.nodes.length == 0 && nodeData.hasChildren) {
                    var childrenResp = getChildren(nodeData.id);
                    childrenResp.done(function (resp) {
                        var children = [];

                        $.each(resp, function (i, node) {
                            var item = createItem(node);
                            recursiveChildProjects(node, item);
                            children.push(item);
                        });

                        index[nodeData.id].nodes = children;
                        index[nodeData.id].state = index[nodeData.id].state || {};
                        index[nodeData.id].state.expanded = true;
                        index[nodeData.id].state.selected = false;

                        initializeTree();
                    });

                }
            });
        }

        function getChildren(id) {
            return $.ajax({
                url: "{{ path('admin_application_crm_project_loadChildren') }}",
                data: {
                    id: id,
                },
                method: 'POST'
            });
        }

        function recursiveChildProjects(object, parent) {
            if (object.hasChildren) {
                parent.nodes = [];

                $.each(object.children, function (i, e) {
                    var child = createItem(e);

                    recursiveChildProjects(e, child);
                    parent.nodes.push(child);
                })
            }
        }

        function createItem(node, i) {
            var item = {};
            var href = "{{ path('admin_application_crm_project_edit', {'id' : 'project_id'}) }}";
            var deletePath =  "{{ path('admin_application_crm_project_delete', {'id' : 'project_id'}) }}";
            var name = node.name;

            href = href.replace("project_id", node.id);
            deletePath = deletePath.replace("project_id", node.id);

            if (node.client_name) {
                name = name + ' - ' + node.client_name;
            }

            item.text = name;
            item.icon = "glyphicon glyphicon-stop";
            item.href = href;
            item.tags = [node.status];
            item.selectable = false;
            item.id = node.id;
            item.hasChildren = node.hasChildren;
            item.newChildPath = "{{ path('admin_application_crm_project_create') }}";
            item.deletePath = deletePath;

            index[node.id] = item;
            index_ref[i] = item;

            return item;
        }

        function getTree() {
            return data;
        }
    </script>

    <div class="col-xs-12 col-md-12">
        <h2>Projects</h2>
        <div id="tree"></div>
        <a id="load-more-project"
           class="btn btn-default"
           style="display: none"
           data-url="{{ path('admin_application_crm_project_loadMoreProject') }}"
        >Load more
        </a>
    </div>
    <script src="{{ asset('assets/vendor/bootstrap-treeview/src/js/bootstrap-treeview.js') }}"></script>
    <script>
        $(document).ready(function () {
            if (lastResultNumber < count) {
                $('#load-more-project').show();
            }

            buildTreeData(serializedData);
            initializeTree();
        });
    </script>

    {#/Users/davidkovacs/Projects/8wayscrm/web/assets/#}
{% endblock %}

{% block list_filters %}
    {% if admin.datagrid.filters %}
        {% form_theme form admin.getTemplate('filter') %}

        <div class="col-xs-12 col-md-12 sonata-filters-box"
             style="display: {{ admin.datagrid.hasDisplayableFilters ? 'block' : 'none' }}"
             id="filter-container-{{ admin.uniqid() }}">
            <div class="box box-primary">
                <div class="box-body">
                    <form class="sonata-filter-form form-horizontal {{ admin.isChild and 1 == admin.datagrid.filters|length ? 'hide' : '' }}"
                          action="{{ admin.generateUrl('list') }}" method="GET" role="form">
                        {{ form_errors(form) }}

                        <div class="row">
                            <div class="col-sm-9">
                                {% set withAdvancedFilter = false %}
                                {% for filter in admin.datagrid.filters %}
                                    {% set filterActive = ((filter.isActive() and filter.options['show_filter'] is null) or (filter.options['show_filter'] is same as(true))) and not admin.isDefaultFilter(filter.formName) %}
                                    {% set filterVisible = filter.options['show_filter'] is same as(true) or filter.options['show_filter'] is null %}
                                    {% if filter.name == 'quicksearch' %}
                                        <div class="hidden">
                                            {{ form_widget(form.children[filter.formName].children['value']) }}
                                        </div>
                                    {% endif %}
                                    <div class="form-group {% block sonata_list_filter_group_class %}{% endblock %}"
                                         id="filter-{{ admin.uniqid }}-{{ filter.name }}"
                                         sonata-filter="{{ filterVisible ? 'true' : 'false' }}"
                                         style="display: {% if filterActive %}block{% else %}none{% endif %}">
                                        {% if filter.label is not same as(false) %}
                                            <label for="{{ form.children[filter.formName].children['value'].vars.id }}"
                                                   class="col-sm-3 control-label">{{ admin.trans(filter.label, {}, filter.translationDomain) }}</label>
                                        {% endif %}
                                        {% set attr = form.children[filter.formName].children['type'].vars.attr|default({}) %}

                                        <div class="col-sm-4 advanced-filter">
                                            {{ form_widget(form.children[filter.formName].children['type'], {'attr':  attr}) }}
                                        </div>

                                        <div class="col-sm-4">
                                            {{ form_widget(form.children[filter.formName].children['value']) }}
                                        </div>

                                        <div class="col-sm-1">
                                            <label class="control-label">
                                                <a href="#" class="sonata-toggle-filter sonata-ba-action"
                                                   filter-target="filter-{{ admin.uniqid }}-{{ filter.name }}"
                                                   filter-container="filter-container-{{ admin.uniqid() }}">
                                                    <i class="fa fa-minus-circle" aria-hidden="true"></i>
                                                </a>
                                            </label>
                                        </div>
                                    </div>

                                    {% if filter.options['advanced_filter'] %}
                                        {% set withAdvancedFilter = true %}
                                    {% endif %}
                                {% endfor %}
                            </div>
                            <div class="col-sm-3 text-center">
                                <input type="hidden" name="filter[_page]" id="filter__page" value="1">

                                {% set foo = form.children['_page'].setRendered() %}
                                {{ form_rest(form) }}

                                <div class="form-group">
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fa fa-filter"
                                           aria-hidden="true"></i> {{ 'btn_filter'|trans({}, 'SonataAdminBundle') }}
                                    </button>

                                    <a class="btn btn-default"
                                       href="{{ admin.generateUrl('list', {filters: 'reset'}) }}">
                                        {{ 'link_reset_filter'|trans({}, 'SonataAdminBundle') }}
                                    </a>
                                </div>

                            </div>
                        </div>

                        {% for paramKey, paramValue in admin.persistentParameters %}
                            <input type="hidden" name="{{ paramKey }}" value="{{ paramValue }}">
                        {% endfor %}
                    </form>
                </div>
            </div>
        </div>
    {% endif %}
{% endblock %}

{% block actions %}
    {{ block('list_filters_actions') }}
    {{ parent() }}
{% endblock %}

{% block list_filters_actions %}
    {%- if admin.datagrid.filters|length %}
        <ul class="nav navbar-nav navbar-right">

            <li class="dropdown sonata-actions">
                <a href="#" class="dropdown-toggle sonata-ba-action" data-toggle="dropdown">
                    <i class="fa fa-filter" aria-hidden="true"></i>
                    {{ 'link_filters'|trans({}, 'SonataAdminBundle') }} <b class="caret"></b>
                </a>

                <ul class="dropdown-menu" role="menu">
                    {% for filter in admin.datagrid.filters if (filter.options['show_filter'] is same as(true) or filter.options['show_filter'] is null) %}
                        {% if filter.name != 'quicksearch' %}
                            {% set filterActive = ((filter.isActive() or filter.options['show_filter']) and not admin.isDefaultFilter(filter.formName)) %}
                            <li>
                                <a href="#" class="sonata-toggle-filter sonata-ba-action"
                                   filter-target="filter-{{ admin.uniqid }}-{{ filter.name }}"
                                   filter-container="filter-container-{{ admin.uniqid() }}">
                                    <i class="fa {{ filterActive ? 'fa-check-square-o' : 'fa-square-o' }}"></i>{{ admin.trans(filter.label, {}, filter.translationDomain) }}
                                </a>
                            </li>
                        {% endif %}
                    {% endfor %}
                </ul>
            </li>
        </ul>
    {% endif -%}
{% endblock %}